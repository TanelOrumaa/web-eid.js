name: Build and bundle library

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - name: Install dependencies
      run: npm ci
    - name: Build
      run: npm run build
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: web-eid-js-${{github.run_number}}
        path: dist/

  coverity:
    name: Run Coverity tests
    if: contains(github.repository, 'web-eid/web-eid.js') && contains(github.ref, 'coverity_scan')
    runs-on: ubuntu-latest
    env:
      TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
      PROJECTNAME: 'web-eid/web-eid.js'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - name: Install dependencies
      run: npm ci
    - name: Download Coverity Build Tool
      run: |
        curl --silent --data "token=$TOKEN&project=$PROJECTNAME" -o cov-analysis-linux64.tar.gz https://scan.coverity.com/download/cxx/linux64
        mkdir cov-analysis-linux64
        tar xzf cov-analysis-linux64.tar.gz --strip 1 -C cov-analysis-linux64
    - name: Build
      run: |
        export PATH=$PWD/cov-analysis-linux64/bin:$PATH
        cov-configure --javascript
        cov-build --dir cov-int --fs-capture-search dist npm run build
    - name: Submit the result to Coverity Scan
      run: |
        tar czvf upload.tgz cov-int
        curl --silent \
          --form project=$PROJECTNAME \
          --form token=$TOKEN \
          --form email=eid-teenusehaldus@ria.ee \
          --form file=@upload.tgz \
          --form version=master \
          --form description="Github Actions CI build" \
          https://scan.coverity.com/builds?project=$PROJECTNAME
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: web-eid-js-${{github.run_number}}
        path: dist/
